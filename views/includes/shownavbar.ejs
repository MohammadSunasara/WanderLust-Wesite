<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Search by State</title>
  <!-- Bootstrap CSS -->
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
  <!-- Custom CSS -->
  <link rel="stylesheet" href="/css/style.css">
  
</head>
<body>

  <nav class="navbar navbar-expand-md bg-body-light border-bottom sticky-top">
    <a class="navbar-brand" href="/listings">
    <div class="container-fluid icon">
      
        <i class="fa-regular fa-compass icon"></i>
      </a>
        
      <form class="d-flex ms-2 me-2 navbar-search search-invisible" role="search" action="/listings/search" method="get">
        <div class="search-container">
          <input class="form-control me-2 search-input" type="text" placeholder="Search by State" id="state-search-mobile" name="state" aria-label="Search">
          <button class="btn btn-primary search-btn-invisible" type="submit"><i class="fa-solid fa-magnifying-glass"></i></button>
        </div>
        <ul id="state-dropdown-mobile" class="dropdown-menu">
          <!-- Options will be added here dynamically -->
        </ul>
      </form>

      <!-- Toggler for Mobile View -->
      <button class="navbar-toggler toog" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup">
        <span class="navbar-toggler-icon"></span>
      </button>

      <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
        <div class="navbar-nav me-auto bg-white ali">
          <a class="nav-link" href="/listings"><h4>Explore</h4></a>
        </div>
      
        <!-- Search Form for All Views -->
        <form class="d-flex ms-2 me-2 navbar-search search-bar" role="search" action="/listings/search" method="get">
          <div class="search-container">
            <input class="form-control me-2 search-input" type="text" placeholder="Search by State" id="state-search" name="state" aria-label="Search">
            <button class="btn btn-primary search-btn" type="submit">Search</button>
          </div>
          <ul id="state-dropdown" class="dropdown-menu">
            <!-- Options will be added here dynamically -->
          </ul>
        </form>

        <div class="navbar-nav ms-auto bg-white">
          <a class="nav-link" href="/listings/new">Add Listing</a>
          <% if (!currUser) { %>
            <a class="nav-link" href="/signup"><b>SignUp</b></a>
            <a class="nav-link" href="/login"><b>Login</b></a>
          <% } %>
          <% if (currUser) { %>
            <a class="nav-link" href="/listings/logout"><b>LogOut</b></a>
          <% } %>
        </div>
      </div>
    </div>
  </nav>

  <!-- Bootstrap JS and dependencies -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/js/bootstrap.min.js"></script>

  <script>
    // List of states
    const states = [
      "Andhra Pradesh", "Arunachal Pradesh", "Assam", "Bihar", 
      "Chhattisgarh", "Goa", "Gujarat", "Haryana", 
      "Himachal Pradesh", "Jharkhand", "Karnataka", "Kerala", 
      "Madhya Pradesh", "Maharashtra", "Manipur", "Meghalaya", 
      "Mizoram", "Nagaland", "Odisha", "Punjab", "Rajasthan", 
      "Sikkim", "Tamil Nadu", "Telangana", "Tripura", 
      "Uttar Pradesh", "Uttarakhand", "West Bengal"
    ];

    // Function to populate the dropdown with state options
    function populateDropdown(filteredStates, dropdownId) {
      const dropdown = document.getElementById(dropdownId);
      dropdown.innerHTML = ""; // Clear existing items
      filteredStates.forEach(state => {
        const li = document.createElement('li');
        li.textContent = state;
        li.className = 'dropdown-item';
        li.onclick = () => selectState(state, dropdownId);
        dropdown.appendChild(li);
      });
      dropdown.classList.toggle('show', filteredStates.length > 0);
    }

    // Function to filter dropdown items based on user input
    function filterDropdown(event) {
      const input = event.target.value.toUpperCase();
      const dropdownId = event.target.id === 'state-search' ? 'state-dropdown' : 'state-dropdown-mobile';
      const filteredStates = states.filter(state => state.toUpperCase().includes(input));
      populateDropdown(filteredStates, dropdownId);
    }

    // Function to handle state selection
    function selectState(state, dropdownId) {
      const searchInputId = dropdownId === 'state-dropdown' ? 'state-search' : 'state-search-mobile';
      document.getElementById(searchInputId).value = state;
      document.getElementById(dropdownId).classList.remove('show');
    }

    // Function to close the dropdown
    function closeDropdown() {
      document.querySelectorAll('.dropdown-menu').forEach(menu => {
        menu.classList.remove('show');
      });
    }

    // Show dropdown when input is focused
    document.getElementById('state-search').addEventListener('focus', function() {
      filterDropdown({ target: this });
    });
    document.getElementById('state-search-mobile').addEventListener('focus', function() {
      filterDropdown({ target: this });
    });

    // Filter dropdown items as user types
    document.getElementById('state-search').addEventListener('input', filterDropdown);
    document.getElementById('state-search-mobile').addEventListener('input', filterDropdown);

    // Close dropdown when clicking outside
    document.addEventListener('click', (event) => {
      if (!event.target.closest('.dropdown')) {
        closeDropdown();
      }
    });
  </script>
</body>
</html>
